z floor tile {
    // wood
    $wood: 42,43,54,44,56,80,118,106,130,129,127, 126,102,103, 53,41,29,28,27, 51,50, 18,19,20,21, 30,31,33, 21;
    $short-wood: 56,92,43,54,129,118,27,51, 103;
    $short-wood-left: 43,103;

    &:before, &:after {
        filter: brightness(.9);
    }

    %wood {
        width: .05rem;
        height: $tile;
        transform: translate3d(2.97rem, 0rem, 5.5rem) rotateY(270deg);
        background: linear-gradient(90deg, rgba($white,.5),$none .01rem, $none 2.4rem, rgba(#000,.9)),$wood-color;
        box-shadow: none;
    }

    %short {
        height: ($tile - .5rem );
        transform: translate3d(2.97rem, 0rem, 5.5rem) rotateY(270deg);
        content: "short-wood";
    }

    @each $i in $wood {
        &:nth-of-type(#{$i}) span:before {
            @extend %wood;
        }
    }

    @each $i in $short-wood {
        &:nth-of-type(#{$i}) span:before {
            @extend %short;
        }
    }

    @each $i in $short-wood-left {
        &:nth-of-type(#{$i}) span:before {
            transform: translate3d(2.97rem, .5rem, 5.5rem) rotateY(270deg);
            content: "short-wood-left";
        }
    }

    &:nth-of-type(42), &:nth-of-type(102) {
        span {
            &:before, &:after {
                width: .05rem;
                height: $tile;
                background: linear-gradient(90deg, rgba($white,.5),$none .01rem, $none 2.4rem, rgba($blk,.9)),$wood-color;
                box-shadow: none;
            }

            &:after {
                transform: translate3d(1.5rem, -1.49rem, 5.5rem) rotateZ(-90deg) rotateY(270deg);
            }
        }
    }
    //corner top left ▛
    $top-left: 1, 3, 22,42,45,65,81,87,102, 110, 113,85;

    //corner top right ▜
    $top-right: 2,12,21,29,36,47,58,63,95,106,112,86;

    //corner bottom left ▙
    $bottom-left: 15, 133,30,34,50, 57,90,93,126,99,73;

    //corner bottom right ▟
    $bottom-right: 144,24,33,53,70,75,83,88,101,124, 131,98,92;

    //////// no more corners!!!
    // rotate!
    $r90: 4,5,6,7,8,9,10,11,16,17,18,19,20,23,27,28, 104, 31,35,43,46,51,62,69,82,91,94,103,105,111,127,129,130,134,135,136,137,138,139,140,141,142, 143,123,100,74;

    //no walls!!
    $no-walls: 32,39,40,52,55,66,67,68,79,114,115,116,117,128;

    //no left, no top
    $no-left: 0,31,41,44,51, 74, 56,80,91,118,127,129,130,137,140,134,123;

    //no right, no bottom
    $no-right: 18,19,20,26,27,28,38,43,54,62,78,97,103,105,111, 122, 104, 61;

    @each $i in $top-left {
        &:nth-of-type(#{$i}) {
            @extend %top-left;
        }
    }

    @each $i in $top-right {
        &:nth-of-type(#{$i}) {
            @extend %top-right;
        }
    }

    @each $i in $bottom-left {
        &:nth-of-type(#{$i}) {
            @extend %bottom-left;
        }
    }

    @each $i in $bottom-right {
        &:nth-of-type(#{$i}) {
            @extend %bottom-right;
        }
    }

    @each $i in $r90 {
        &:nth-of-type(#{$i}) {
            @extend %r901;
        }
    }

    @each $i in $no-walls {
        &:nth-of-type(#{$i}) {
            @extend %no-walls;
        }
    }

    @each $i in $no-left {
        &:nth-of-type(#{$i}) {
            @extend %no-left;
        }
    }

    @each $i in $no-right {
        &:nth-of-type(#{$i}) {
            @extend %no-right;
        }
    }
    //short

    &:nth-of-type(42):after, &:nth-of-type(43):before {
        width: ($tile * 1.75);
    }

    &:nth-of-type(43):before {
        transform: translate3d(0rem, $tile, 0) rotateX(180deg) rotateY(90deg)
    }
    //lights

    &:not(:nth-of-type(42),:nth-of-type(89),:nth-of-type(21),:nth-of-type(102)) span:after {
        width: 40%;
        height: 98%;
        background: red;
        border-radius: .1rem;
        display: none;
        bottom: 0;
        right: 0;
        margin: auto;
        border: .5rem solid rgba(#6f3939,.9);
        box-shadow: inset 0 0 .1rem hotpink;
    }

    $lights: 19,43,67,91, 114,116,118,17,5,7,9,11,23,35, 60,84,108,132,13,14,38,40,76,89, 46,58,71,82,107,142, 139,89,99,124,136,37,86,110;

    %lights {
        display: block;
    }

    %rotate {
        width: 98%;
        height: 40%;
    }

    @each $i in $lights {
        &:nth-of-type(#{$i}) span:after {
            @extend %lights;
        }
    }

    $rotate: 67;
    $flicker: 67,107,38,23,110;

    @each $i in $flicker {
        &:nth-of-type(#{$i}) span:after {
            animation: flicker 10s ease-in-out reverse infinite;
        }
    }

    @each $i in $rotate {
        &:nth-of-type(#{$i}) {
            @extend %rotate;
        }
    }

    &:nth-of-type(104):before, &:nth-of-type(92):after {
        background: repeating-linear-gradient($none, $none .15rem, $bars .15rem, $bars .2rem );
    }

    &:nth-of-type(104), &:nth-of-type(92) {
        background: repeating-linear-gradient($none, $none .15rem, rgba($bars,.1) .15rem, rgba($bars,.1) .2rem ) !important;
    }

    &:nth-of-type(92) {
        background: linear-gradient($dirt,$none $shadow, $none) !important;
    }
}